[{"C:\\Projects\\react-blog\\client\\src\\index.js":"1","C:\\Projects\\react-blog\\client\\src\\App.js":"2","C:\\Projects\\react-blog\\client\\src\\store.js":"3","C:\\Projects\\react-blog\\client\\src\\reducers\\rootReducer.js":"4","C:\\Projects\\react-blog\\client\\src\\reducers\\post.js":"5","C:\\Projects\\react-blog\\client\\src\\actions\\types.js":"6","C:\\Projects\\react-blog\\client\\src\\components\\PostsList.jsx":"7","C:\\Projects\\react-blog\\client\\src\\components\\AddPostForm.jsx":"8","C:\\Projects\\react-blog\\client\\src\\actions\\post.js":"9","C:\\Projects\\react-blog\\client\\src\\api\\index.js":"10","C:\\Projects\\react-blog\\client\\src\\components\\Post.jsx":"11","C:\\Projects\\react-blog\\client\\src\\components\\PostDetails.jsx":"12","C:\\Projects\\react-blog\\client\\src\\components\\EditPostForm.jsx":"13"},{"size":287,"mtime":1612459926957,"results":"14","hashOfConfig":"15"},{"size":2284,"mtime":1615049647802,"results":"16","hashOfConfig":"15"},{"size":348,"mtime":1612460230700,"results":"17","hashOfConfig":"15"},{"size":174,"mtime":1612460327019,"results":"18","hashOfConfig":"15"},{"size":1128,"mtime":1615049029688,"results":"19","hashOfConfig":"15"},{"size":225,"mtime":1615048287521,"results":"20","hashOfConfig":"15"},{"size":1638,"mtime":1614933561233,"results":"21","hashOfConfig":"15"},{"size":4160,"mtime":1615046071264,"results":"22","hashOfConfig":"15"},{"size":1338,"mtime":1615048360663,"results":"23","hashOfConfig":"15"},{"size":518,"mtime":1615048264027,"results":"24","hashOfConfig":"15"},{"size":1962,"mtime":1614940958033,"results":"25","hashOfConfig":"15"},{"size":3470,"mtime":1615045807948,"results":"26","hashOfConfig":"15"},{"size":3851,"mtime":1615049477297,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7pqmwj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\react-blog\\client\\src\\index.js",[],["58","59"],"C:\\Projects\\react-blog\\client\\src\\App.js",["60"],"C:\\Projects\\react-blog\\client\\src\\store.js",[],"C:\\Projects\\react-blog\\client\\src\\reducers\\rootReducer.js",[],"C:\\Projects\\react-blog\\client\\src\\reducers\\post.js",[],"C:\\Projects\\react-blog\\client\\src\\actions\\types.js",[],"C:\\Projects\\react-blog\\client\\src\\components\\PostsList.jsx",["61"],"import React, { useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {useSelector } from \"react-redux\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport Post from \"./Post\";\r\nimport gridFour from \"../images/grid_four.svg\";\r\nimport gridThree from \"../images/grid_three.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layoutShifter: {\r\n    float: \"right\",\r\n    margin: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nconst PostList = () => {\r\n  const posts = useSelector((state) => state.posts.posts);\r\n\r\n  const [layout, setLayout] = useState(\"gridThree\");\r\n\r\n  const calculateMd = () => {\r\n    return layout == \"gridThree\" ? 4 : 3;\r\n  } \r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      { /* Layout Shifter*/ }\r\n      <div className={ classes.layoutShifter }>\r\n        <Button variant=\"text\" size=\"small\" onClick={ () => setLayout(\"gridThree\")}>\r\n          <img src={ gridThree } style={{ background: layout === \"gridThree\" ? \"#ccc\" : \"\" }} alt=\"Three Columns Grid Icon\"/>\r\n        </Button>\r\n\r\n        <Button variant=\"text\" size=\"small\" onClick={ () => setLayout(\"gridFour\")}>\r\n          <img src={ gridFour } style={{ background: layout === \"gridFour\" ? \"#ccc\" : \"\" }} alt=\"Four Columns Grid Icon\"/>\r\n        </Button>\r\n      </div>\r\n      <Grid container spacing={2} alignContent=\"stretch\">\r\n        {\r\n          posts.length > 0 &&\r\n            posts.map((post) => (\r\n              <Grid item key={post?._id} xs={12} md={calculateMd()}>\r\n                <Post {...post} />\r\n              </Grid>\r\n            ))\r\n        }\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n","C:\\Projects\\react-blog\\client\\src\\components\\AddPostForm.jsx",[],"C:\\Projects\\react-blog\\client\\src\\actions\\post.js",[],"C:\\Projects\\react-blog\\client\\src\\api\\index.js",[],"C:\\Projects\\react-blog\\client\\src\\components\\Post.jsx",["62"],"import React from 'react';\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  Chip,\r\n  Button,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport noImage from \"../images/noimage.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root : {\r\n    maxWidth: 374,\r\n    position: \"relative\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",  // 16:9\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundBlendMode: \"darken\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    left: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  chip : {\r\n    marginTop: theme.spacing(1),\r\n  }\r\n}))\r\n\r\nconst Post = ({ _id, title, subtitle, content, tag, image, createdAt}) => {\r\n\r\n  const convertRelativeTime = (date) => {\r\n    return moment(date).fromNow();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia \r\n        className={classes.media}\r\n        image={ image || noImage }\r\n        title=\"Resim\"\r\n      />\r\n      <div className={ classes.overlay }>\r\n        <Typography variant=\"h6\"></Typography>\r\n        <Typography variant=\"body2\">\r\n          { convertRelativeTime(createdAt) }\r\n        </Typography>\r\n      </div>\r\n\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"p\" gutterBottom>\r\n          { title }\r\n        </Typography>\r\n        <Typography variant=\"overline\" component=\"p\" gutterBottom>\r\n          { subtitle }\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\r\n          { content.substring(0,250) + \"...\" }\r\n        </Typography>\r\n\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            <Link to={`/posts/${_id}`}>Daha fazla..</Link>\r\n          </Button>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","C:\\Projects\\react-blog\\client\\src\\components\\PostDetails.jsx",["63"],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Paper, Divider, Button, Chip } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditPostForm from \"./EditPostForm\";\r\nimport noImage from \"../images/noimage.svg\";\r\nimport { fetchSinglePost, deletePost } from \"../actions/post\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    borderRadius: 5,\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  chip: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst PostDetails = ({ match, history, location }) => {\r\n  const dispatch = useDispatch();\r\n  const { id } = match.params;\r\n\r\n  const currentPost = useSelector((state) => state.posts.currentPost);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const openEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const closeEditMode = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSinglePost(id));\r\n  }, [dispatch]);\r\n\r\n  const convertRelativeTime = (date) => {\r\n    return moment(date).fromNow();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const removePost = () => {\r\n    dispatch(deletePost(currentPost._id));\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={0}>\r\n      {editMode ? (\r\n        <EditPostForm post={currentPost} closeEditMode={closeEditMode} />\r\n      ) : (\r\n        <div>\r\n          <div>\r\n            <div className={classes.header}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {currentPost?.title}\r\n              </Typography>\r\n              <div>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  startIcon={<EditIcon />}\r\n                  onClick={openEditMode}\r\n                >\r\n                  Düzenle\r\n                </Button>{\" \"}\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  startIcon={<DeleteIcon />}\r\n                  onClick={removePost}\r\n                >\r\n                  Sil\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Divider />\r\n\r\n          <Typography variant=\"overline\" gutterBottom>\r\n            {currentPost?.subtitle}\r\n          </Typography>\r\n          <Typography variant=\"caption\" component=\"p\">\r\n            {convertRelativeTime(currentPost?.createdAt)} by Hakan\r\n          </Typography>\r\n          <Chip\r\n            label={`# ${currentPost?.tag}`}\r\n            variant=\"outlined\"\r\n            className={classes.chip}\r\n          />\r\n\r\n          <div className={classes.content}>\r\n            <img\r\n              src={currentPost?.image || noImage}\r\n              alt=\"Post\"\r\n              className={classes.image}\r\n            />\r\n\r\n            <Typography variant=\"body1\">{currentPost?.content}</Typography>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","C:\\Projects\\react-blog\\client\\src\\components\\EditPostForm.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":18,"column":3,"nodeType":"70","messageId":"71","endLine":18,"endColumn":11},{"ruleId":"72","severity":1,"message":"73","line":22,"column":19,"nodeType":"74","messageId":"75","endLine":22,"endColumn":21},{"ruleId":"68","severity":1,"message":"76","line":7,"column":3,"nodeType":"70","messageId":"71","endLine":7,"endColumn":7},{"ruleId":"77","severity":1,"message":"78","line":53,"column":6,"nodeType":"79","endLine":53,"endColumn":16,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Chip' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [dispatch, id]",{"range":"86","text":"87"},[1433,1443],"[dispatch, id]"]